<UserControl x:Class="ProgettoInformatica.Views.GameWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProgettoInformatica.Views" xmlns:viewmodels="clr-namespace:ProgettoInformatica.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:GameWindowViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1280" >

    <Grid x:Name="BaseGrid">
        <Grid.Background>
            <LinearGradientBrush x:Name="Gradient" StartPoint="1,1" EndPoint="0,0">
                <GradientStop x:Name="GradientStop1" Color="#3194F4" Offset="0.7"/>
                <GradientStop x:Name="GradientStop2" Color="#5571EC" Offset="0.1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="GradientStop1"
                            Storyboard.TargetProperty="Color"
                            To="#5571EC" Duration="0:0:10" RepeatBehavior="Forever"  AutoReverse="True"/>
                        <ColorAnimation
                            Storyboard.TargetName="GradientStop2"
                            Storyboard.TargetProperty="Color"
                            To="#3194F4" Duration="0:0:10" RepeatBehavior="Forever" AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>

            </EventTrigger>
        </Grid.Triggers>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}" x:Key="UIButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">

                        <Setter Property="ForceCursor" Value="True"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Canvas}" x:Key="ScoreViewShowUp">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsGameTerminated}" Value="true">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Canvas}" x:Key="RobotAnimation">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsAnswered}" Value="true">
                        <Setter Property="Visibility" Value="Visible"/>
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:4" >
                                        <LinearDoubleKeyFrame KeyTime="0:0:1" Value="200"/>
                                        <LinearDoubleKeyFrame KeyTime="0:0:3" Value="200"/>
                                        <LinearDoubleKeyFrame KeyTime="0:0:4" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Grid}" x:Key="QuestionAnimation">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:2" >
                                    <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1080" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="0" KeySpline="0.0,1.0 0.8,1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>

                </Style.Triggers>
            </Style>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Canvas Style="{StaticResource RobotAnimation}" Panel.ZIndex="3">
            <Canvas.RenderTransform>
                <TranslateTransform X="0" Y="0"/>
            </Canvas.RenderTransform>
            <Grid Canvas.Left="-181" Canvas.Top="278" HorizontalAlignment="Center" VerticalAlignment="Top" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="White" Stroke="Transparent" RadiusX="8" RadiusY="10"/>
                <Path Fill="White" Stretch="Fill" Stroke="Transparent" HorizontalAlignment="Left" Margin="8.3,-1.597,0,0" Width="25" Grid.Row="1" Data="M0,10.45381 L0,187.66699 100.791059,10.54395"/>
                <Rectangle Fill="White" RadiusX="10" RadiusY="10" Margin="1"/>
                <TextBlock Foreground="#5D70D1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="25" Text="{Binding RispostaRobot}" TextWrapping="Wrap" Padding="5" />
            </Grid>
            <Image x:Name="robot" VerticalAlignment="Top"  Source="./Img/default-robot.png" Canvas.Left="-252" Height="110" Width="130" HorizontalAlignment="Center" Canvas.Top="332"/>
        </Canvas>

        <Canvas Panel.ZIndex="3" x:Name="volumePopUp">
            <Canvas.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="#5D70D1"/>
                    <Setter Property="FontFamily" Value="Roboto"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="{x:Type Canvas}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsVolumePressed}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Canvas.Resources>
            <Border Background="White" CornerRadius="20" Canvas.Left="1047" Canvas.Top="50" >
                <Border.Effect>
                    <DropShadowEffect
                            Color="Gray"
                            Opacity="0.4"
                            Direction="230"
                            BlurRadius="20"
                            />
                </Border.Effect>
                <local:SoundWindow Width="200" Height="200" />
            </Border>

        </Canvas>

        <Canvas x:Name="ScoreView" Grid.RowSpan="1" Panel.ZIndex="100" VerticalAlignment="Center" Style="{StaticResource ScoreViewShowUp}">
            <Border BorderBrush="LightGray" Width="1280" Height="720" BorderThickness="1" HorizontalAlignment="Center" Canvas.Top="-122" VerticalAlignment="Top" ClipToBounds="True" Background="Black" Opacity="0.1"/>
            <Button x:Name="myButton" Background="Transparent" Width="1280" Height="720" HorizontalAlignment="Center" Canvas.Top="-122" VerticalAlignment="Top"  Style="{StaticResource UIButtonStyle}" ClipToBounds="True" Command="{Binding GameTerminatedCommand}">
                
                <local:ScoreWindow Width="900" Height="500"/>

            </Button>
        </Canvas>




        <Grid>
            <Grid.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                    <Setter Property="Background" Value="White"/>

                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="#5D70D1"/>
                    <Setter Property="FontFamily" Value="Roboto"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width=".2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock FontSize="30" Foreground="white" Grid.Column="1" Text="0:0:40"/>
            <StackPanel Orientation="Horizontal">
                <Button Background="Transparent" Command="{Binding NavigateMenuCommand}"  BorderThickness="0" Style="{StaticResource UIButtonStyle}">

                    <Image Source="./Img/left-arrow.png" Margin="0 5"/>
                </Button>
                <TextBlock Text="Quiz" VerticalAlignment="Center" FontSize="25" Foreground="White" FontFamily="Dilo World"/>
            </StackPanel>
            <local:UIBar Grid.Column="1" Grid.ColumnSpan="2"/>
            <Button Grid.Column="2" Background="Transparent" Margin="60 0 0 0" Style="{StaticResource UIButtonStyle}" Command="{Binding VolumePopUp}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <Image  HorizontalAlignment="Right" Source=".\Img\options-icon-white.png"  Height="40" />
            </Button>
        </Grid>

        <!--<Border HorizontalAlignment="Center" Padding="100,0"  CornerRadius="50" Grid.Row="1" >-->
        <Grid Grid.Row="1" Margin="200 0" Style="{StaticResource QuestionAnimation}">
            <Grid.RenderTransform>
                <TranslateTransform X="0" Y="0"/>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <Path Fill="White" Stretch="Fill" Stroke="Transparent" HorizontalAlignment="Right" Margin="8.3,-1.7,18,0" Width="50" Grid.Row="1" Data="M0,10.2438 L100,187.66699 100.791059,9.54395"/>
            <Rectangle Fill="White" RadiusX="20" RadiusY="20" Margin="1"/>
            <TextBlock Text="{Binding CartaCorrente.Quesito}" Foreground="#5D70D1" FontWeight="SemiBold" FontFamily="Roboto" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30"/>
        </Grid>



        <Grid  Grid.Row="2" Margin="0 75 0 0">
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="Margin" Value="0 10"/>
                    <Setter Property="Width" Value="440"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Foreground" Value="#5D70D1"/>
                    <Setter Property="FontFamily" Value="Roboto"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                  ShadowDepth="5"
                                  Direction="300"
                                  Color="Gray"
                                  Opacity="0.5"
                                 BlurRadius="10"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template" >
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="ButtonBorder" BorderBrush="Transparent" BorderThickness="3" CornerRadius="10" Background="{TemplateBinding Background}">


                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                    </ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="15"/>
                        </Style>
                    </Style.Resources>

                    <Style.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ForceCursor" Value="True"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Width" Duration="0:0:.1" >
                                            <LinearDoubleKeyFrame KeyTime="0:0:.1" Value="460"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Width" Duration="0:0:.1" >
                                            <LinearDoubleKeyFrame KeyTime="0:0:.1" Value="440"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:2" Storyboard.TargetProperty="Width" From="400" To="500" />
                                        <DoubleAnimation Duration="0:0:2" Storyboard.TargetProperty="Height" From="50" To="80" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>-->
                        </Trigger>

                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="{Binding CartaCorrente.Risposte[0]}" Grid.Row="0" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
            <Button Content="{Binding CartaCorrente.Risposte[1]}" Grid.Row="0" Grid.Column="1" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
            <Button Content="{Binding CartaCorrente.Risposte[2]}" Grid.Row="1" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
            <Button Content="{Binding CartaCorrente.Risposte[3]}" Grid.Row="1" Grid.Column="1" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
        </Grid>

    </Grid>
</UserControl>
