<UserControl x:Class="ProgettoInformatica.Views.GameWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProgettoInformatica.Views" xmlns:viewmodels="clr-namespace:ProgettoInformatica.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:GameWindowViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1280">

    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Canvas}" x:Key="animation">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=isAnswered}" Value="true">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:5">
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="200"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:3" Value="200"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:4" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>

                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
        </Grid.Resources>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#3194F4" Offset="0.1"/>
                <GradientStop Color="#5571EC" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Canvas Grid.Row="1" Style="{StaticResource animation}" Panel.ZIndex="3">
            <Canvas.RenderTransform>
                <TranslateTransform X="0" Y="0"/>
            </Canvas.RenderTransform>
            <Grid Canvas.Left="-181" Canvas.Top="78">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="White" Stroke="Transparent" RadiusX="8" RadiusY="10"/>
                <Path Fill="White" Stretch="Fill" Stroke="Transparent" HorizontalAlignment="Left" Margin="8.3,-1.597,0,0" Width="25" Grid.Row="1" Data="M0,10.45381 L0,187.66699 100.791059,10.54395"/>
                <Rectangle Fill="White" RadiusX="10" RadiusY="10" Margin="1"/>
                <TextBlock Foreground="#5D70D1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="25" Text="Testo Prova" TextWrapping="Wrap" Padding="5" />
            </Grid>
            <Image x:Name="robot" VerticalAlignment="Top"  Source="./Img/default-robot.png" Canvas.Left="-252" Height="110" Width="130" HorizontalAlignment="Left" Canvas.Top="132"/>
        </Canvas>


        <Grid>
            <Grid.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                    <Setter Property="Background" Value="White"/>

                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="#5D70D1"/>
                    <Setter Property="FontFamily" Value="Roboto"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                        </ContentPresenter>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="ForceCursor" Value="True"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Button Background="Transparent" Command="{Binding NavigateMenuCommand}"  BorderThickness="0">

                    <Image Source="./Img/left-arrow.png" Margin="0 5"/>
                </Button>
                <TextBlock Text="Menu" VerticalAlignment="Center" FontSize="25" Foreground="White" FontFamily="Dilo World"/>
            </StackPanel>
            <Border Width="100" Height="20" HorizontalAlignment="Center" Margin="5 0 0 0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="level" Text="1" Padding="5 0">

                    </TextBlock>
                    <Border CornerRadius="0 6 6 0" Width="84" Background="LightGray">
                        <TextBlock x:Name="experience" Text="1/100"  Width="36"/>
                    </Border>
                </StackPanel>
            </Border>


            <Border Grid.Column="2" Width="80" Height="25" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock  x:Name="coins" Text="1000"  />
                    <Image Source="./Img/coin.png" Height="15" Margin="5 0 0 0"/>
                </StackPanel>

            </Border>

            <Image Grid.Column="2" HorizontalAlignment="Right" Source=".\Img\options-icon-white.png" Margin="0 0 15 0" Height="40"/>
        </Grid>

        <!--<Border HorizontalAlignment="Center" Padding="100,0"  CornerRadius="50" Grid.Row="1" >-->
        <Grid Grid.Row="1" Margin="200 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <Path Fill="White" Stretch="Fill" Stroke="Transparent" HorizontalAlignment="Right" Margin="8.3,-1.597,18,0" Width="50" Grid.Row="1" Data="M0,10.45381 L100,187.66699 100.791059,10.54395"/>
            <Rectangle Fill="White" RadiusX="20" RadiusY="20" Margin="1"/>
            <TextBlock Text="{Binding QuesitoCorrente}" Foreground="#5D70D1" FontWeight="SemiBold" FontFamily="Roboto" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="40"/>
        </Grid>



        <Grid  Grid.Row="2" Margin="0 75 0 0">
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="Margin" Value="100 10"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Foreground" Value="#5D70D1"/>
                    <Setter Property="FontFamily" Value="Roboto"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                  ShadowDepth="5"
                                  Direction="300"
                                  Color="Gray"
                                  Opacity="0.5"
                                 BlurRadius="10"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border BorderBrush="Transparent" BorderThickness="3" CornerRadius="10" Background="{TemplateBinding Background}">
                                    <Border.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=isAnswered}" Value="true">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" Duration="0:0:6">
                                                                    <LinearColorKeyFrame KeyTime="0:0:1" Value="LightGray"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:1.5" Value="Transparent"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:2" Value="LightGray"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:2.5" Value="Transparent"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:3" Value="LightGray"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:3.5" Value="Transparent"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:4" Value="LightGray"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:4.5" Value="Transparent"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:5" Value="LightGray"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:5.5" Value="Transparent"/>
                                                                    <LinearColorKeyFrame KeyTime="0:0:6" Value="Green"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                    </ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="15"/>
                        </Style>
                    </Style.Resources>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ForceCursor" Value="True"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                            
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="{Binding RisposteCorrenti[0]}" Grid.Row="0" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
            <Button Content="{Binding RisposteCorrenti[1]}" Grid.Row="0" Grid.Column="1" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
            <Button Content="{Binding RisposteCorrenti[2]}" Grid.Row="1" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
            <Button Content="{Binding RisposteCorrenti[3]}" Grid.Row="1" Grid.Column="1" Command="{Binding ChangeButtonColor}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"></Button>
        </Grid>

    </Grid>
</UserControl>
